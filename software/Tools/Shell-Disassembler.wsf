<?XML version="1.0"?>
<package>
<job id="Shell-Disassembler">
<reference object="Scripting.FileSystemObject" /> 'Microsoft Scripting Runtime TypeLib (for fso)
<script language="VBScript">
<![CDATA[

Option Explicit
'-----------------------------------------------------------------------
' retro-205 Shell-Disassembler.wsf
' Copyright (c) 2020, Paul Kimpel,
' Licensed under the MIT License, see
'       http://www.opensource.org/licenses/mit-license.php
'-----------------------------------------------------------------------
' VBScript to read a text file containing one decimal word per line. Does
' a primitive disassembly of each word and formats it for input to the
' Shell Assembler. Places the address of each word in columns 4-7 of the
' card image, which are ignored by the assembler.
' Uses Scripting Runtime FileSystemObject.
' Parameters:
'   Name of object code text file (required).
'   Name of resulting Shell Assembler card image source file. By default,
'       this will be the name of input file with "-SHELL.card" concatenated.
'-----------------------------------------------------------------------
' Modification Log.
' 2020-03-29  P.Kimpel
'   Original version, cloned from retro-205/software/Tools/Simple-Disassembler.wsf.
'-----------------------------------------------------------------------

Const defaultSuffix = "-SHELL.card"
Const startAddr = 0

Dim args
Dim codeDict
Dim codeFile
Dim codeName
Dim disFile
Dim disName
Dim fso

'---------------------------------------
Function Pic9n(byVal v, byVal d)
  'Expands or truncates the value "v" to a length of "d", right-justified
  'over zeroes.
  Dim length
  Dim s

  s = Trim(CStr(v))
  length = Len(s)
  If length > d Then
    Pic9n = Right(s, d)
  ElseIf length < d Then
    Pic9n = String(d-length, "0") & s
  Else
    Pic9n = s
  End If
End Function

'---------------------------------------
Sub DisassembleCode
  'Creates the disassembled text file.
  Dim addr
  Dim ctl
  Dim opcode
  Dim operand
  Dim sign
  Dim tag
  Dim text
  Dim word
  Dim x

  addr = startAddr

  Do While Not codeFile.AtEndOfStream
    word = codeFile.ReadLine
    word = Pic9n(Trim(word), 11)

    sign = Mid(word, 1, 1)
    If sign = "0" Then
      sign = " "
    ElseIf sign = "1" Then
      sign = "-"
    End If

    ctl = Mid(word, 2, 4)
    If ctl = "0000" Then
      ctl = "    "
    End If

    opcode = Mid(word, 6, 2)
    If codeDict.Exists(opcode) Then
      opcode = codeDict(opcode)
    Else
      opcode = Space(3) & opcode
    End If

    tag = Mid(word, 8, 1)
    If tag < "4" Or tag > "7" Then
      tag = " "
    End If

    operand = Mid(word, 8, 4)

    text = "1" & Space(2) & Pic9n(addr, 4) & Space(2) & _
           Space(5) & sign & ctl & opcode & tag & " " & operand
    disFile.WriteLine text

    If sign < "4" Or sign > "5" Then
      addr = addr+1
    Else
      addr = CInt(operand)
      disFile.WriteLine "1" & Space(8+5+1+4) & "REM"
      disfile.WriteLine "1" & Space(8+5+1+4) & "ORG    " & operand
    End If
  Loop
End Sub

'---------------------------------------------------------------

Set codeDict = CreateObject("Scripting.Dictionary")
codeDict.Add "00", "PTR  "
codeDict.Add "01", "CIRA "
codeDict.Add "02", "STC  "
codeDict.Add "03", "PTW  "
codeDict.Add "04", "CNZ  "
codeDict.Add "06", "UA   "
codeDict.Add "07", "PTWF "
codeDict.Add "08", "STOP "
codeDict.Add "10", "DAD  "
codeDict.Add "11", "BA   "
codeDict.Add "12", "ST   "
codeDict.Add "13", "SR   "
codeDict.Add "14", "SL   "
codeDict.Add "15", "NOR  "
codeDict.Add "16", "ADSC "
codeDict.Add "17", "SUSC "
codeDict.Add "20", "CU   "
codeDict.Add "21", "CUR  "
codeDict.Add "22", "DB   "
codeDict.Add "23", "RO   "
codeDict.Add "24", "BF4  "
codeDict.Add "25", "BF5  "
codeDict.Add "26", "BF6  "
codeDict.Add "27", "BF7  "
codeDict.Add "28", "CC   "
codeDict.Add "29", "CCR  "
codeDict.Add "30", "CUB  "
codeDict.Add "31", "CUBR "
codeDict.Add "32", "IB   "
codeDict.Add "33", "CR   "
codeDict.Add "34", "BT4  "
codeDict.Add "35", "BT5  "
codeDict.Add "36", "BT6  "
codeDict.Add "37", "BT7  "
codeDict.Add "38", "CCB  "
codeDict.Add "39", "CCBR "
codeDict.Add "40", "MTR  "
codeDict.Add "42", "MTS  "
codeDict.Add "44", "CDR  "
codeDict.Add "45", "CDRI "
codeDict.Add "48", "CDRF "
codeDict.Add "50", "MTW  "
codeDict.Add "52", "MTRW "
codeDict.Add "54", "CDW  "
codeDict.Add "55", "CDWI "
codeDict.Add "58", "CDWF "
codeDict.Add "60", "M    "
codeDict.Add "61", "DIV  "
codeDict.Add "63", "EX   "
codeDict.Add "64", "CAD  "
codeDict.Add "65", "CSU  "
codeDict.Add "66", "CADA "
codeDict.Add "67", "CSUA "
codeDict.Add "70", "MRO  "
codeDict.Add "71", "EXC  "
codeDict.Add "72", "SB   "
codeDict.Add "73", "OSGD "
codeDict.Add "74", "AD   "
codeDict.Add "75", "SU   "
codeDict.Add "76", "ADA  "
codeDict.Add "77", "SUA  "
codeDict.Add "80", "FAD  "
codeDict.Add "81", "FSU  "
codeDict.Add "82", "FM   "
codeDict.Add "83", "FDIV "
codeDict.Add "85", "MSH  "
codeDict.Add "87", "MSE  "
codeDict.Add "90", "FAA  "
codeDict.Add "91", "FSA  "
codeDict.Add "92", "FMA  "
codeDict.Add "93", "FDA  "

Set fso = WScript.CreateObject("Scripting.FileSystemObject")

Set args = WScript.Arguments
If args.Count < 1 Then
  MsgBox "Must supply at least the name of the decimal code file."
  WScript.Quit 9
Else
  codeName = Trim(args.Item(0))
  If args.Count > 1 Then
    disName = Trim(args.Item(1))
  Else
    disName = fso.BuildPath(fso.GetParentFolderName(codeName), fso.GetBaseName(codeName)) & defaultSuffix
  End If
End If

Set args = Nothing

'-- Main Line --
If Not fso.FileExists(codeName) Then
  MsgBox "Decimal code file does not exist: " & vbCrLf & codeName
Else
  Set codeFile = fso.OpenTextFile(codeName, ForReading, False, False)
  Set disFile = fso.CreateTextFile(disName, True, False)
  DisassembleCode
  disFile.Close
  Set disFile = Nothing
  codeFile.Close
  Set codeFile = Nothing
  MsgBox "Disassembled file created: " & vbCrLf & disName
End If

Set fso = Nothing
Set codeDict = Nothing

WScript.Quit 0

]]>
</script>
</job>
</package>
